WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/home/vlad/code/evm-semantics/.build/k/k-distribution/target/release/k/lib/java/guice-4.0-beta5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Reading the input file TimeSpec {sec = 0, nsec = 41943}
Parsing the file TimeSpec {sec = 0, nsec = 950191854}
Verifying the definition TimeSpec {sec = 0, nsec = 845563261}
Reading the input file TimeSpec {sec = 0, nsec = 30283}
Parsing the file TimeSpec {sec = 0, nsec = 3076108}
Verifying the pattern TimeSpec {sec = 0, nsec = 2430209}
kore-exec: While applying axiom:
RulePattern {left = PurePattern {getPurePattern = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Hash'removeZeros'LParUndsCommUndsRParUnds'EVM-DATA'UndsUnds'List'Unds'Map", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 9})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Unds'List'Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 89})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "LblListItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 111})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarKEY", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 125})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 132})}, sortActualSorts = []})})))]}))),CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarL", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 145})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 150})}, sortActualSorts = []})})))]}))),CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Unds'Map'Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 162})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'UndsPipe'-'-GT-Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 183})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarKEY", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 210})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 217})}, sortActualSorts = []})}))),CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 229})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 233})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 244})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 261})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))]}))),CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarREST", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 279})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 287})}, sortActualSorts = []})})))]})))]})))}, right = PurePattern {getPurePattern = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Hash'removeZeros'LParUndsCommUndsRParUnds'EVM-DATA'UndsUnds'List'Unds'Map", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 9})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarL", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 89})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 94})}, sortActualSorts = []})}))),CofreeT (Identity (Null :< VariablePattern (Variable {variableName = Id {getId = "VarREST", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 105})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 113})}, sortActualSorts = []})})))]})))}, requires = GenericPredicate (PurePattern {getPurePattern = CofreeT (Identity (Null :< TopPattern (Top {topSort = SortVariableSort (SortVariable {getSortVariable = Id {getId = "R", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20079, column = 10})}})})))}), attributes = AxiomPatternAttributes {heatCool = Normal, productionID = ProductionID {getProductionID = Nothing}, assoc = Assoc {isAssoc = False}, comm = Comm {isComm = False}, unit = Unit {isUnit = False}, idem = Idem {isIdem = False}}}
to configuration:
Predicated {term = PurePattern {getPurePattern = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Hash'removeZeros'LParUndsCommUndsRParUnds'EVM-DATA'UndsUnds'List'Unds'Map", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 13789, column = 9})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 818, column = 86})}, sortActualSorts = []}), domainValueChild = BuiltinList (fromList [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4577})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4581})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4592})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 1263, column = 118})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))])}))),CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 537, column = 133})}, sortActualSorts = []}), domainValueChild = BuiltinMap (fromList [(PurePattern {getPurePattern = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4577})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4581})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4592})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 1263, column = 118})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))},CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4625})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4629})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4640})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 913, column = 94})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "115792089237316195423570985008687907853269984665640564039457584007913129639934"})))})})))]}))))])})))]})))}, predicate = GenericPredicate (PurePattern {getPurePattern = CofreeT (Identity (Null :< TopPattern (Top {topSort = SortActualSort (SortActual {sortActualName = Id {getId = "PREDICATE", idLocation = AstLocationNone}, sortActualSorts = []})})))}), substitution = NormalizedSubstitution []}
Unexpected non-false predicate:
GenericPredicate (PurePattern {getPurePattern = CofreeT (Identity (Null :< AndPattern (And {andSort = SortActualSort (SortActual {sortActualName = Id {getId = "PREDICATE", idLocation = AstLocationNone}, sortActualSorts = []}), andFirst = CofreeT (Identity (Null :< EqualsPattern (Equals {equalsOperandSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 818, column = 86})}, sortActualSorts = []}), equalsResultSort = SortActualSort (SortActual {sortActualName = Id {getId = "PREDICATE", idLocation = AstLocationNone}, sortActualSorts = []}), equalsFirst = CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 818, column = 86})}, sortActualSorts = []}), domainValueChild = BuiltinList (fromList [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4577})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4581})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4592})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 1263, column = 118})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))])}))), equalsSecond = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Unds'List'Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 89})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "LblListItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 111})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< VariablePattern (ConfigurationVariable (Variable {variableName = Id {getId = "var_VarKEY_937671", idLocation = AstLocationGeneratedVariable}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 132})}, sortActualSorts = []})}))))]}))),CofreeT (Identity (Null :< VariablePattern (ConfigurationVariable (Variable {variableName = Id {getId = "var_VarL_937669", idLocation = AstLocationGeneratedVariable}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 94})}, sortActualSorts = []})}))))]})))}))), andSecond = CofreeT (Identity (Null :< EqualsPattern (Equals {equalsOperandSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 537, column = 133})}, sortActualSorts = []}), equalsResultSort = SortActualSort (SortActual {sortActualName = Id {getId = "PREDICATE", idLocation = AstLocationNone}, sortActualSorts = []}), equalsFirst = CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 537, column = 133})}, sortActualSorts = []}), domainValueChild = BuiltinMap (fromList [(PurePattern {getPurePattern = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4577})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4581})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4592})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 1263, column = 118})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))},CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4625})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4629})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 17657, column = 4640})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 913, column = 94})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "115792089237316195423570985008687907853269984665640564039457584007913129639934"})))})})))]}))))])}))), equalsSecond = CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'Unds'Map'Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 162})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "Lbl'UndsPipe'-'-GT-Unds'", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 183})}, symbolOrAliasParams = []}, applicationChildren = [CofreeT (Identity (Null :< VariablePattern (ConfigurationVariable (Variable {variableName = Id {getId = "var_VarKEY_937671", idLocation = AstLocationGeneratedVariable}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 132})}, sortActualSorts = []})})))),CofreeT (Identity (Null :< ApplicationPattern (Application {applicationSymbolOrAlias = SymbolOrAlias {symbolOrAliasConstructor = Id {getId = "inj", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 229})}, symbolOrAliasParams = [SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 233})}, sortActualSorts = []}),SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 244})}, sortActualSorts = []})]}, applicationChildren = [CofreeT (Identity (Null :< DomainValuePattern (DomainValue {domainValueSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortInt", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 261})}, sortActualSorts = []}), domainValueChild = BuiltinPattern (PurePattern {getPurePattern = CofreeT (Identity (Null :< StringLiteralPattern (StringLiteral {getStringLiteral = "0"})))})})))]})))]}))),CofreeT (Identity (Null :< VariablePattern (ConfigurationVariable (Variable {variableName = Id {getId = "var_VarREST_937670", idLocation = AstLocationGeneratedVariable}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20083, column = 113})}, sortActualSorts = []})}))))]})))})))})))})
when substitutions:
fromList []
do not cover all variables in left axiom:
fromList [Variable {variableName = Id {getId = "VarKEY", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 125})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortKItem", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 132})}, sortActualSorts = []})},Variable {variableName = Id {getId = "VarL", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 145})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortList", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 150})}, sortActualSorts = []})},Variable {variableName = Id {getId = "VarREST", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 279})}, variableSort = SortActualSort (SortActual {sortActualName = Id {getId = "SortMap", idLocation = AstLocationFile (FileLocation {fileName = "/home/vlad/code/evm-semantics/.build/haskell/driver-kompiled/definition.kore", line = 20082, column = 287})}, sortActualSorts = []})}]

CallStack (from HasCallStack):
  error, called at src/Kore/Step/BaseStep.hs:446:14 in kore-0.0.1.0-DsCPXfzUQ4G8uat6EXrxvO:Kore.Step.BaseStep
[Error] Critical: Haskell backend returned non-zero exit code
